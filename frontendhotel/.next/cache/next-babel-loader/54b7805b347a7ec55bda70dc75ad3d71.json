{"ast":null,"code":"var _jsxFileName = \"F:\\\\LearnWork\\\\frontendhotel\\\\pages\\\\detail\\\\[id]\\\\index.js\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/Layout';\nimport { API } from '../../../services/apiResource';\nimport apiService from '../../../services/apiServices';\nimport React, { useState, useEffect } from 'react';\n\nfunction RenderComments(prop) {\n  const commentRender = prop.comments.map(comment => {\n    let date = new Date(comment.createAt).getDate();\n    console.log(date);\n    return __jsx(\"div\", {\n      key: comment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, \"Author: \", comment.author), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, \"Comment: \", comment.comment), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, \"Date: \", date));\n  });\n  return commentRender;\n}\n\nfunction RenderHotel(prop) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    key: prop.hotel.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \" \", prop.hotel.name, \" \"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, prop.hotel.address), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, prop.hotel.image), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, prop.hotel.price), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, prop.hotel.vote), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, prop.hotel.like)));\n}\n\nexport default function Index(props) {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(RenderHotel, {\n    hotel: props.comments[0].hotel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), __jsx(RenderComments, {\n    comments: props.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n}\nexport async function getStaticProps({\n  params\n}) {\n  const comments = await apiService.getAll(API.HOTELS.getAll + `/${params.id}/` + API.COMMENTS.get);\n  return {\n    props: {\n      comments: comments\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const hotels = await apiService.getAll(API.HOTELS.getAll);\n  const paths = hotels.map(x => ({\n    params: {\n      id: x.id\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["F:/LearnWork/frontendhotel/pages/detail/[id]/index.js"],"names":["Layout","API","apiService","React","useState","useEffect","RenderComments","prop","commentRender","comments","map","comment","date","Date","createAt","getDate","console","log","id","author","RenderHotel","hotel","name","address","image","price","vote","like","Index","props","getStaticProps","params","getAll","HOTELS","COMMENTS","get","getStaticPaths","hotels","paths","x","fallback"],"mappings":"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","sourcesContent":["import Layout from '../../../components/Layout'\r\nimport { API } from '../../../services/apiResource';\r\nimport apiService from '../../../services/apiServices'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nfunction RenderComments(prop) {\r\n    const commentRender = prop.comments.map(comment => {\r\n        let date = new Date(comment.createAt).getDate();\r\n        console.log(date);\r\n        \r\n        return (\r\n            <div key={comment.id}>\r\n                <div>Author: {comment.author}</div>\r\n                <div>Comment: {comment.comment}</div>\r\n                <div>Date: {date}</div>\r\n            </div>\r\n        )\r\n\r\n    })\r\n    return commentRender;\r\n}\r\nfunction RenderHotel(prop) {\r\n    return (\r\n        <>\r\n            <div key={prop.hotel.id}>\r\n                <div> {prop.hotel.name} </div>\r\n                <div>{prop.hotel.address}</div>\r\n                <div>{prop.hotel.image}</div>\r\n                <div>{prop.hotel.price}</div>\r\n                <div>{prop.hotel.vote}</div>\r\n                <div>{prop.hotel.like}</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default function Index(props) {\r\n    return (\r\n        <Layout>\r\n            <RenderHotel hotel={props.comments[0].hotel} />\r\n            <RenderComments comments={props.comments} />\r\n        </Layout>\r\n    )\r\n}\r\nexport async function getStaticProps({ params }) {\r\n    const comments = await apiService.getAll(API.HOTELS.getAll + `/${params.id}/` + API.COMMENTS.get);\r\n    return {\r\n        props: {\r\n            comments: comments\r\n        }\r\n    }\r\n}\r\nexport async function getStaticPaths() {\r\n    const hotels = await apiService.getAll(API.HOTELS.getAll);\r\n    const paths = hotels.map(x => ({\r\n        params: { id: x.id },\r\n    }));\r\n    return {\r\n        paths,\r\n        fallback: false,\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}