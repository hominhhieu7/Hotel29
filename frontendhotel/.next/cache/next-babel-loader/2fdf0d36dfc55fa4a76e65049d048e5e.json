{"ast":null,"code":"var _jsxFileName = \"F:\\\\LearnWork\\\\frontendhotel\\\\pages\\\\detail\\\\[id]\\\\renderComment.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction RenderComments(props) {\n  const {\n    comments\n  } = props;\n  const commentRender = comments.map(comment => {\n    return __jsx(\"div\", {\n      key: comment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }\n    }, \"Author: \", comment.author), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, \"Comment: \", comment.comment));\n  });\n  return __jsx(List, {\n    className: \"comment-list\",\n    header: `${comments.length} comments`,\n    itemLayout: \"horizontal\",\n    dataSource: comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, __jsx(Comment, {\n      author: item.author,\n      content: item.comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  });\n}\n\nRenderComments.propTypes = {\n  comments: PropTypes.array\n};\nRenderComments.defaultProps = {\n  comments: []\n};\nexport default RenderComments;","map":{"version":3,"sources":["F:/LearnWork/frontendhotel/pages/detail/[id]/renderComment.js"],"names":["React","PropTypes","RenderComments","props","comments","commentRender","map","comment","id","author","length","item","propTypes","array","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AAEA,QAAME,aAAa,GAAGD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAI;AAC1C,WACI;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcD,OAAO,CAACE,MAAtB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeF,OAAO,CAACA,OAAvB,CAFJ,CADJ;AAOH,GARqB,CAAtB;AASA,SACI,MAAC,IAAD;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,MAAM,EAAG,GAAEH,QAAQ,CAACM,MAAO,WAF/B;AAGI,IAAA,UAAU,EAAC,YAHf;AAII,IAAA,UAAU,EAAEN,QAJhB;AAKI,IAAA,UAAU,EAAEO,IAAI,IACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AACI,MAAA,MAAM,EAAEA,IAAI,CAACF,MADjB;AAEI,MAAA,OAAO,EAAEE,IAAI,CAACJ,OAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAgBH;;AAEDL,cAAc,CAACU,SAAf,GAA2B;AACvBR,EAAAA,QAAQ,EAAEH,SAAS,CAACY;AADG,CAA3B;AAGAX,cAAc,CAACY,YAAf,GAA8B;AAC1BV,EAAAA,QAAQ,EAAE;AADgB,CAA9B;AAIA,eAAeF,cAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction RenderComments(props) {\r\n    const { comments } = props;\r\n\r\n    const commentRender = comments.map(comment => {\r\n        return (\r\n            <div key={comment.id}>\r\n                <div>Author: {comment.author}</div>\r\n                <div>Comment: {comment.comment}</div>\r\n            </div>\r\n        )\r\n\r\n    })\r\n    return (\r\n        <List\r\n            className=\"comment-list\"\r\n            header={`${comments.length} comments`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={comments}\r\n            renderItem={item => (\r\n                <li>\r\n                    <Comment\r\n                        author={item.author}\r\n                        content={item.comment}\r\n                    />\r\n                </li>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nRenderComments.propTypes = {\r\n    comments: PropTypes.array,\r\n}\r\nRenderComments.defaultProps = {\r\n    comments: []\r\n}\r\n\r\nexport default RenderComments\r\n\r\n"]},"metadata":{},"sourceType":"module"}