{"ast":null,"code":"var _jsxFileName = \"F:\\\\LearnWork\\\\frontendhotel\\\\pages\\\\detail\\\\[id]\\\\index.js\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/Layout';\nimport { API } from '../../../services/apiResource';\nimport apiService from '../../../services/apiServices';\nimport React, { useState, useEffect } from 'react';\nimport RenderHotel from './renderHotel';\n\nfunction RenderComments(prop) {\n  const commentRender = prop.comments.map(comment => {\n    return __jsx(\"div\", {\n      key: comment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, \"Author: \", comment.author), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, \"Comment: \", comment.comment));\n  });\n  return commentRender;\n}\n\nexport default function Index(props) {\n  console.log(props);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(RenderHotel, {\n    hotel: props.comments[0].hotel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), __jsx(RenderComments, {\n    comments: props.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n}\nexport async function getStaticProps({\n  params\n}) {\n  const comments = await apiService.getAll(API.HOTELS.getAll + `/${params.id}/` + API.COMMENTS.get);\n  return {\n    props: {\n      comments: comments\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const hotels = await apiService.getAll(API.HOTELS.getAll);\n  const paths = hotels.map(x => ({\n    params: {\n      id: x.id\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["F:/LearnWork/frontendhotel/pages/detail/[id]/index.js"],"names":["Layout","API","apiService","React","useState","useEffect","RenderHotel","RenderComments","prop","commentRender","comments","map","comment","id","author","Index","props","console","log","hotel","getStaticProps","params","getAll","HOTELS","COMMENTS","get","getStaticPaths","hotels","paths","x","fallback"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,SAASC,GAAT,QAAoB,+BAApB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,QAAMC,aAAa,GAAGD,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IAAI;AAC/C,WACI;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcD,OAAO,CAACE,MAAtB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeF,OAAO,CAACA,OAAvB,CAFJ,CADJ;AAOH,GARqB,CAAtB;AASA,SAAOH,aAAP;AACH;;AACD,eAAe,SAASM,KAAT,CAAeC,KAAf,EAAsB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEA,KAAK,CAACN,QAAN,CAAe,CAAf,EAAkBS,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEH,KAAK,CAACN,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;AACD,OAAO,eAAeU,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC7C,QAAMX,QAAQ,GAAG,MAAMR,UAAU,CAACoB,MAAX,CAAkBrB,GAAG,CAACsB,MAAJ,CAAWD,MAAX,GAAqB,IAAGD,MAAM,CAACR,EAAG,GAAlC,GAAuCZ,GAAG,CAACuB,QAAJ,CAAaC,GAAtE,CAAvB;AACA,SAAO;AACHT,IAAAA,KAAK,EAAE;AACHN,MAAAA,QAAQ,EAAEA;AADP;AADJ,GAAP;AAKH;AACD,OAAO,eAAegB,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMzB,UAAU,CAACoB,MAAX,CAAkBrB,GAAG,CAACsB,MAAJ,CAAWD,MAA7B,CAArB;AACA,QAAMM,KAAK,GAAGD,MAAM,CAAChB,GAAP,CAAWkB,CAAC,KAAK;AAC3BR,IAAAA,MAAM,EAAE;AAAER,MAAAA,EAAE,EAAEgB,CAAC,CAAChB;AAAR;AADmB,GAAL,CAAZ,CAAd;AAGA,SAAO;AACHe,IAAAA,KADG;AAEHE,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH","sourcesContent":["import Layout from '../../../components/Layout'\r\nimport { API } from '../../../services/apiResource';\r\nimport apiService from '../../../services/apiServices'\r\nimport React, { useState, useEffect } from 'react'\r\nimport RenderHotel from './renderHotel';\r\n\r\nfunction RenderComments(prop) {\r\n    const commentRender = prop.comments.map(comment => {\r\n        return (\r\n            <div key={comment.id}>\r\n                <div>Author: {comment.author}</div>\r\n                <div>Comment: {comment.comment}</div>\r\n            </div>\r\n        )\r\n\r\n    })\r\n    return commentRender;\r\n}\r\nexport default function Index(props) {\r\n    console.log(props);\r\n    \r\n    return (\r\n        <Layout>\r\n            <RenderHotel hotel={props.comments[0].hotel} />\r\n            <RenderComments comments={props.comments} />\r\n        </Layout>\r\n    )\r\n}\r\nexport async function getStaticProps({ params }) {\r\n    const comments = await apiService.getAll(API.HOTELS.getAll + `/${params.id}/` + API.COMMENTS.get);\r\n    return {\r\n        props: {\r\n            comments: comments\r\n        }\r\n    }\r\n}\r\nexport async function getStaticPaths() {\r\n    const hotels = await apiService.getAll(API.HOTELS.getAll);\r\n    const paths = hotels.map(x => ({\r\n        params: { id: x.id },\r\n    }));\r\n    return {\r\n        paths,\r\n        fallback: false,\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}