{"ast":null,"code":"var _jsxFileName = \"F:\\\\LearnWork\\\\frontendhotel\\\\pages\\\\detail\\\\[id]\\\\index.js\";\nvar __jsx = React.createElement;\nimport Layout from '../../../components/Layout';\nimport { API } from '../../../services/apiResource';\nimport apiService from '../../../services/apiServices';\nimport React, { useState, useEffect } from 'react';\nexport default function Index(props) {\n  if (props.isLoading) {\n    console.log(props.hotel);\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, \"ahihi\"));\n  } else {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, \"Loading...\"));\n  }\n}\nexport async function getStaticProps({\n  params\n}) {\n  const hotel = await apiService.getAll(API.HOTELS.getAll + `/${params.id}`);\n  const comments = await apiService.getAll(API.HOTELS.getAll + `/${params.id}` + API.COMMENTS.get);\n\n  if (hotel && comments) {\n    return {\n      props: {\n        hotel: hotel,\n        comments: comments,\n        isLoading: false\n      }\n    };\n  } else {\n    return {\n      props: {\n        isLoading: true\n      }\n    };\n  }\n}\nexport async function getStaticPaths() {\n  return {\n    paths: [{\n      params: {\n        id: \"\"\n      }\n    }],\n    fallback: true\n  };\n}","map":{"version":3,"sources":["F:/LearnWork/frontendhotel/pages/detail/[id]/index.js"],"names":["Layout","API","apiService","React","useState","useEffect","Index","props","isLoading","console","log","hotel","getStaticProps","params","getAll","HOTELS","id","comments","COMMENTS","get","getStaticPaths","paths","fallback"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,SAASC,GAAT,QAAoB,+BAApB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAKA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,MAAIA,KAAK,CAACC,SAAV,EAAqB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,KAAlB;AACA,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ;AAKH,GAPD,MAQK;AACD,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKH;AACJ;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC7C,QAAMF,KAAK,GAAG,MAAMT,UAAU,CAACY,MAAX,CAAkBb,GAAG,CAACc,MAAJ,CAAWD,MAAX,GAAqB,IAAGD,MAAM,CAACG,EAAG,EAApD,CAApB;AACA,QAAMC,QAAQ,GAAG,MAAMf,UAAU,CAACY,MAAX,CAAkBb,GAAG,CAACc,MAAJ,CAAWD,MAAX,GAAqB,IAAGD,MAAM,CAACG,EAAG,EAAlC,GAAsCf,GAAG,CAACiB,QAAJ,CAAaC,GAArE,CAAvB;;AACA,MAAIR,KAAK,IAAIM,QAAb,EAAuB;AACnB,WAAO;AACHV,MAAAA,KAAK,EAAE;AACHI,QAAAA,KAAK,EAAEA,KADJ;AAEHM,QAAAA,QAAQ,EAAEA,QAFP;AAGHT,QAAAA,SAAS,EAAE;AAHR;AADJ,KAAP;AAOH,GARD,MAQM;AACF,WAAO;AACHD,MAAAA,KAAK,EAAC;AACFC,QAAAA,SAAS,EAAE;AADT;AADH,KAAP;AAKH;AAEJ;AACD,OAAO,eAAeY,cAAf,GAAgC;AACnC,SAAO;AACHC,IAAAA,KAAK,EAAE,CACH;AAAER,MAAAA,MAAM,EAAE;AAAEG,QAAAA,EAAE,EAAE;AAAN;AAAV,KADG,CADJ;AAIHM,IAAAA,QAAQ,EAAE;AAJP,GAAP;AAMH","sourcesContent":["import Layout from '../../../components/Layout'\r\nimport { API } from '../../../services/apiResource';\r\nimport apiService from '../../../services/apiServices'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\nexport default function Index(props) {\r\n    if (props.isLoading) {\r\n        console.log(props.hotel);\r\n        return (\r\n            <Layout>\r\n                <div>ahihi</div>\r\n            </Layout>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Layout>\r\n                <div>Loading...</div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n    const hotel = await apiService.getAll(API.HOTELS.getAll + `/${params.id}`);\r\n    const comments = await apiService.getAll(API.HOTELS.getAll + `/${params.id}` + API.COMMENTS.get);\r\n    if (hotel && comments) {\r\n        return {\r\n            props: {\r\n                hotel: hotel,\r\n                comments: comments,\r\n                isLoading: false\r\n            }\r\n        }\r\n    } else{\r\n        return {\r\n            props:{\r\n                isLoading: true\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nexport async function getStaticPaths() {\r\n    return {\r\n        paths: [\r\n            { params: { id: \"\" } }\r\n        ],\r\n        fallback: true,\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}