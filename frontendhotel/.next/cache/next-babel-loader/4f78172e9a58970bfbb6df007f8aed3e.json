{"ast":null,"code":"import \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/list/style/css\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nvar _jsxFileName = \"F:\\\\LearnWork\\\\frontendhotel\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport apiService from '../services/apiServices';\nimport { API } from '../services/apiResource';\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport 'antd/dist/antd.css';\nimport React, { useState, useEffect } from 'react';\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\nexport default function Index(props) {\n  const {\n    0: isLoading,\n    1: loading\n  } = useState(false);\n  useEffect(() => {\n    loading(true);\n  });\n\n  if (isLoading) {\n    _message.success('Load success', 1);\n\n    return __jsx(React.Fragment, null, __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, __jsx(_List, {\n      itemLayout: \"vertical\",\n      size: \"large\",\n      bordered: true,\n      pagination: {\n        onChange: page => {\n          console.log(page);\n        },\n        pageSize: 8\n      },\n      dataSource: props.hotels,\n      renderItem: renderItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Loading...\"));\n  }\n}\n\nfunction renderItem(item) {\n  const IconText = ({\n    icon,\n    text\n  }) => __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(icon, {\n    style: {\n      marginRight: 8\n    }\n  }), text);\n\n  return __jsx(_Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(_Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(_List.Item, {\n    style: {\n      borderBottom: '1px solid',\n      borderColor: '#e2dedc'\n    },\n    key: item.id,\n    actions: [__jsx(IconText, {\n      icon: StarOutlined,\n      text: item.vote,\n      key: \"list-vertical-star-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }), __jsx(IconText, {\n      icon: LikeOutlined,\n      text: item.like,\n      key: \"list-vertical-like-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }) // <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\n    ],\n    extra: __jsx(Link, {\n      href: `/detail/[id]`,\n      as: `/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      width: 172,\n      alt: \"logo\",\n      src: item.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: `/detail/[id]`,\n    as: `/${item.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, __jsx(_List.Item.Meta, {\n    title: item.name,\n    description: item.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }))), item.description)));\n}\n\nexport async function getStaticProps() {\n  const hotels = await apiService.getAll(API.HOTELS.getAll);\n  return {\n    props: {\n      hotels: hotels\n    }\n  };\n}","map":{"version":3,"sources":["F:/LearnWork/frontendhotel/pages/index.js"],"names":["apiService","API","Layout","Link","React","useState","useEffect","MessageOutlined","LikeOutlined","StarOutlined","Index","props","isLoading","loading","success","onChange","page","console","log","pageSize","hotels","renderItem","item","IconText","icon","text","createElement","style","marginRight","borderBottom","borderColor","id","vote","like","image","name","address","description","getStaticProps","getAll","HOTELS"],"mappings":"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","sourcesContent":["import apiService from '../services/apiServices'\r\nimport { API } from '../services/apiResource'\r\nimport Layout from '../components/Layout'\r\nimport Link from 'next/link'\r\nimport 'antd/dist/antd.css';\r\nimport { List, Row, Col, message } from 'antd';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\r\n\r\n\r\nexport default function Index(props) {\r\n    const [isLoading, loading] = useState(false);\r\n    useEffect(() => {\r\n        loading(true);\r\n    })\r\n    if (isLoading) {\r\n        message.success('Load success', 1);\r\n        return (\r\n            <>\r\n                <Layout>\r\n                    <List\r\n                        itemLayout=\"vertical\"\r\n                        size=\"large\"\r\n                        bordered={true}\r\n                        pagination={{\r\n                            onChange: page => {\r\n                                console.log(page);\r\n                            },\r\n                            pageSize: 8,\r\n                        }}\r\n                        dataSource={props.hotels}\r\n                        renderItem={renderItem}\r\n                    >\r\n                    </List>\r\n                </Layout>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Layout>\r\n                <div>Loading...</div>\r\n            </Layout>\r\n        )\r\n    }\r\n\r\n}\r\nfunction renderItem(item) {\r\n    const IconText = ({ icon, text }) => (\r\n        <span>\r\n            {React.createElement(icon, { style: { marginRight: 8 } })}\r\n            {text}\r\n        </span>\r\n    );\r\n    return (\r\n        <Row justify=\"center\">\r\n            <Col span={8}>\r\n                <List.Item\r\n                    style={{ borderBottom: '1px solid', borderColor: '#e2dedc' }}\r\n                    key={item.id}\r\n                    actions={[\r\n                        <IconText icon={StarOutlined} text={item.vote} key=\"list-vertical-star-o\" />,\r\n                        <IconText icon={LikeOutlined} text={item.like} key=\"list-vertical-like-o\" />,\r\n                        // <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\r\n                    ]}\r\n                    extra={\r\n                        <Link href={`/detail/[id]`} as={`/${item.id}`}>\r\n                            <a>\r\n                                <img\r\n                                    width={172}\r\n                                    alt=\"logo\"\r\n                                    src={item.image}\r\n                                />\r\n                            </a>\r\n                        </Link>\r\n                    }\r\n                >\r\n                    <Link href={`/detail/[id]`} as={`/${item.id}`}>\r\n                        <a>\r\n                            <List.Item.Meta\r\n                                title={item.name}\r\n                                description={item.address}\r\n                            />\r\n                        </a>\r\n                    </Link>\r\n                    {item.description}\r\n                </List.Item>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport async function getStaticProps() {\r\n    const hotels = await apiService.getAll(API.HOTELS.getAll);\r\n    return {\r\n        props: {\r\n            hotels: hotels\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}