{"ast":null,"code":"var __jsx = React.createElement;\nimport Layout from '../../../components/Layout';\nimport { API } from '../../../services/apiResource';\nimport apiService from '../../../services/apiServices';\nimport React, { useState, useEffect } from 'react';\nimport RenderHotel from './renderHotel';\nimport RenderComments from './renderComment';\nexport default function Index(props) {\n  return __jsx(Layout, null, __jsx(RenderHotel, {\n    hotel: props.hotel\n  }), __jsx(RenderComments, {\n    comments: props.comments\n  }));\n}\nexport async function getStaticProps({\n  params\n}) {\n  try {\n    const comments = await apiService.get(API.HOTELS.getAll + `/${params.id}/` + API.COMMENTS.get);\n    const hotels = await apiService.get(API.HOTELS.getAll);\n    const hotel = hotels.find(x => x.id === params.id);\n    return {\n      props: {\n        comments: comments,\n        hotel: hotel\n      }\n    };\n  } catch (error) {\n    console.log(\"Failed to fetch: \");\n  }\n}\nexport async function getStaticPaths() {\n  try {\n    const hotels = await apiService.get(API.HOTELS.getAll);\n    const paths = hotels.map(x => ({\n      params: {\n        id: x.id\n      }\n    }));\n    return {\n      paths,\n      fallback: false\n    };\n  } catch (error) {\n    console.log(\"Failed to fetch: \");\n  }\n}","map":null,"metadata":{},"sourceType":"module"}