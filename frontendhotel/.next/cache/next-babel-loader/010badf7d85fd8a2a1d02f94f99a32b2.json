{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { baseUrl } from '../common/baseUrl';\nimport fetch from 'node-fetch';\n\nclass apiService {\n  constructor() {\n    _defineProperty(this, \"getAll\", async function (url) {\n      return new Promise(async (resolve, reject) => {\n        try {\n          let res = await fetch(baseUrl + url);\n\n          if (res.ok) {\n            let data = res.json();\n            console.log(data);\n            resolve(data);\n          } else {\n            reject(resolve.statusText);\n          }\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n  }\n\n}\n\nexport default new apiService();","map":{"version":3,"sources":["F:/LearnWork/frontendhotel/services/apiServices.js"],"names":["baseUrl","fetch","apiService","url","Promise","resolve","reject","res","ok","data","json","console","log","statusText","error"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAIA,MAAMC,UAAN,CAAiB;AAAA;AAAA,oCACJ,gBAAgBC,GAAhB,EAAqB;AAC1B,aAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,YAAI;AACA,cAAIC,GAAG,GAAG,MAAMN,KAAK,CAACD,OAAO,GAAGG,GAAX,CAArB;;AACA,cAAII,GAAG,CAACC,EAAR,EAAY;AACR,gBAAIC,IAAI,GAAGF,GAAG,CAACG,IAAJ,EAAX;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAJ,YAAAA,OAAO,CAACI,IAAD,CAAP;AACH,WAJD,MAKK;AACDH,YAAAA,MAAM,CAACD,OAAO,CAACQ,UAAT,CAAN;AACH;AACJ,SAVD,CAUE,OAAOC,KAAP,EAAc;AACZR,UAAAA,MAAM,CAACQ,KAAD,CAAN;AACH;AACJ,OAdM,CAAP;AAeH,KAjBY;AAAA;;AAAA;;AAoBjB,eAAe,IAAIZ,UAAJ,EAAf","sourcesContent":["import { baseUrl } from '../common/baseUrl'\r\nimport fetch from 'node-fetch'\r\n\r\n\r\n\r\nclass apiService {\r\n    getAll = async function (url) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                let res = await fetch(baseUrl + url);\r\n                if (res.ok) {\r\n                    let data = res.json();\r\n                    console.log(data);\r\n                    resolve(data);\r\n                }\r\n                else {\r\n                    reject(resolve.statusText);\r\n                }\r\n            } catch (error) {\r\n                reject(error);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default new apiService();"]},"metadata":{},"sourceType":"module"}