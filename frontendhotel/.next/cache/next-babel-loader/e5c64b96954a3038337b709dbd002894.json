{"ast":null,"code":"import \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/list/style/css\";\nimport _List from \"antd/lib/list\";\nvar __jsx = React.createElement;\nimport apiService from '../services/apiServices';\nimport { API } from '../services/apiResource';\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport React, { useState, useEffect } from 'react';\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\nexport default function Index(props) {\n  return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(_List, {\n    style: {\n      borderTopWidth: '0px',\n      borderBottomWidth: '0px'\n    },\n    itemLayout: \"vertical\",\n    size: \"large\",\n    bordered: true,\n    pagination: {\n      onChange: page => {},\n      pageSize: 8\n    },\n    dataSource: props.hotels,\n    renderItem: renderItem\n  })));\n}\n\nfunction renderItem(item) {\n  const IconText = ({\n    icon,\n    text\n  }) => __jsx(\"span\", null, React.createElement(icon, {\n    style: {\n      marginRight: 8\n    }\n  }), text);\n\n  return __jsx(_Row, {\n    key: item.id,\n    justify: \"center\"\n  }, __jsx(_Col, {\n    span: 8\n  }, __jsx(_List.Item, {\n    style: {\n      borderBottom: '1px solid',\n      borderColor: '#e2dedc'\n    },\n    actions: [, __jsx(IconText, {\n      icon: LikeOutlined,\n      text: item.like,\n      key: \"list-vertical-like-o\"\n    }) // <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\n    ],\n    extra: __jsx(Link, {\n      href: `/detail/[id]`,\n      as: `/detail/${item.id}`\n    }, __jsx(\"a\", null, __jsx(\"img\", {\n      width: 172,\n      alt: \"logo\",\n      src: item.image\n    })))\n  }, __jsx(Link, {\n    href: `/detail/[id]`,\n    as: `/detail/${item.id}`\n  }, __jsx(\"a\", null, __jsx(_List.Item.Meta, {\n    title: item.name,\n    description: item.address\n  }))), item.description)));\n}\n\nexport async function getStaticProps() {\n  try {\n    const data = await apiService.get(API.HOTELS.getAll);\n    const hotels = await data.filter(hotels => hotels.status === false);\n    return {\n      props: {\n        hotels: hotels\n      }\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}