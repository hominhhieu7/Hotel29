{"ast":null,"code":"import \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nvar _jsxFileName = \"F:\\\\LearnWork\\\\frontendhotel\\\\pages\\\\detail\\\\[id]\\\\renderHotel.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { LikeOutlined, StarOutlined } from '@ant-design/icons';\nimport apiServices from '../../../services/apiServices';\nimport { API } from '../../../services/apiResource';\n\nfunction RenderHotel(props) {\n  const {\n    hotel\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function bookingButton() {\n    setLoading(true);\n    const data = await apiServices.put(API.HOTELS.getAll + `${hotel.id}`, {\n      status: true\n    });\n\n    if (data.status) {\n      setLoading(false);\n\n      _message.success(\"Booking success\", 1);\n    }\n  }\n\n  return __jsx(\"div\", {\n    key: hotel.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(_Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(_Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: hotel.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  })), __jsx(_Col, {\n    span: 8,\n    offset: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \" \", hotel.name, \" \"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Price: \", hotel.price, \"$\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Adress: \", hotel.address), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, __jsx(StarOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }), hotel.vote), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, __jsx(LikeOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }), hotel.like), hotel.status ? __jsx(_Button, {\n    type: \"primary\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 37\n    }\n  }, \"Book\") : __jsx(_Button, {\n    type: \"primary\",\n    onClick: bookingButton,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }, \"Book\"))));\n}\n\nRenderHotel.propTypes = {\n  hotel: PropTypes.object\n};\nRenderHotel.defaultProps = {\n  hotel: {}\n};\nexport default RenderHotel;","map":{"version":3,"sources":["F:/LearnWork/frontendhotel/pages/detail/[id]/renderHotel.js"],"names":["React","useState","PropTypes","LikeOutlined","StarOutlined","apiServices","API","RenderHotel","props","hotel","loading","setLoading","bookingButton","data","put","HOTELS","getAll","id","status","success","image","name","price","address","vote","like","propTypes","object","defaultProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,GAAT,QAAoB,+BAApB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AACA,QAAM;AAAA,OAACE,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,KAAD,CAAtC;;AACA,iBAAeW,aAAf,GAA+B;AAC3BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,IAAI,GAAG,MAAMR,WAAW,CAACS,GAAZ,CAAgBR,GAAG,CAACS,MAAJ,CAAWC,MAAX,GAAqB,GAAEP,KAAK,CAACQ,EAAG,EAAhD,EAAmD;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAnD,CAAnB;;AACA,QAAIL,IAAI,CAACK,MAAT,EAAiB;AACbP,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,eAAQQ,OAAR,CAAgB,iBAAhB,EAAmC,CAAnC;AACH;AACJ;;AACD,SACI;AAAK,IAAA,GAAG,EAAEV,KAAK,CAACQ,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAER,KAAK,CAACW,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,IAAI,EAAE,CAAX;AAAc,IAAA,MAAM,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMX,KAAK,CAACY,IAAZ,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYZ,KAAK,CAACa,KAAlB,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAab,KAAK,CAACc,OAAnB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,EAAqBd,KAAK,CAACe,IAA3B,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,EAAqBf,KAAK,CAACgB,IAA3B,CALJ,EAMKhB,KAAK,CAACS,MAAN,GAAe;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf,GAEW;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEN,aAAhC;AAA+C,IAAA,OAAO,EAAEF,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARhB,CAJJ,CADJ,CADJ;AAqBH;;AAEDH,WAAW,CAACmB,SAAZ,GAAwB;AACpBjB,EAAAA,KAAK,EAAEP,SAAS,CAACyB;AADG,CAAxB;AAGApB,WAAW,CAACqB,YAAZ,GAA2B;AACvBnB,EAAAA,KAAK,EAAE;AADgB,CAA3B;AAIA,eAAeF,WAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Row, Col, Button, message } from 'antd';\r\nimport { LikeOutlined, StarOutlined } from '@ant-design/icons';\r\nimport apiServices from '../../../services/apiServices';\r\nimport { API } from '../../../services/apiResource';\r\n\r\n\r\n\r\n\r\nfunction RenderHotel(props) {\r\n    const { hotel } = props;\r\n    const [loading, setLoading] = useState(false);\r\n    async function bookingButton() {\r\n        setLoading(true);\r\n        const data = await apiServices.put(API.HOTELS.getAll + `${hotel.id}`, { status: true })\r\n        if (data.status) {\r\n            setLoading(false);\r\n            message.success(\"Booking success\", 1);\r\n        }\r\n    }\r\n    return (\r\n        <div key={hotel.id}>\r\n            <Row justify=\"center\">\r\n                <Col span={8}>\r\n                    <img src={hotel.image}></img>\r\n                </Col>\r\n                <Col span={8} offset={3} >\r\n                    <h1> {hotel.name} </h1>\r\n                    <h2>Price: {hotel.price}$</h2>\r\n                    <h2>Adress: {hotel.address}</h2>\r\n                    <h3><StarOutlined />{hotel.vote}</h3>\r\n                    <h3><LikeOutlined />{hotel.like}</h3>\r\n                    {hotel.status ? <Button type=\"primary\" disabled>\r\n                        Book\r\n                    </Button> : <Button type=\"primary\" onClick={bookingButton} loading={loading}>\r\n                            Book\r\n                    </Button>}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nRenderHotel.propTypes = {\r\n    hotel: PropTypes.object,\r\n}\r\nRenderHotel.defaultProps = {\r\n    hotel: {}\r\n}\r\n\r\nexport default RenderHotel\r\n\r\n"]},"metadata":{},"sourceType":"module"}