{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { baseUrl } from '../common/baseUrl';\nimport fetch from 'node-fetch';\n\nclass apiService {\n  constructor() {\n    _defineProperty(this, \"get\", async url => {\n      return new Promise(async (resolve, reject) => {\n        try {\n          let res = await fetch(baseUrl + url);\n          let data = await res.json();\n\n          if (res.ok) {\n            resolve(data);\n          } else {\n            reject(resolve);\n          }\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n\n    _defineProperty(this, \"put\", async (url, body) => {\n      return new Promise(async (resolve, reject) => {\n        try {\n          const option = {\n            method: 'PUT',\n            body: JSON.stringify(body),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          };\n          let res = await fetch(baseUrl + url, option);\n          let data = await res.json();\n\n          if (res.ok) {\n            resolve(data);\n          } else {\n            reject(data);\n          }\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n  }\n\n}\n\nexport default new apiService();","map":null,"metadata":{},"sourceType":"module"}