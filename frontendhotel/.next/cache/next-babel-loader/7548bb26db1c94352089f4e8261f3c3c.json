{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { baseUrl } from '../common/baseUrl';\nimport fetch from 'node-fetch';\n\nclass apiService {\n  constructor() {\n    _defineProperty(this, \"getAll\", async function (url) {\n      return new Promise(async (resolve, reject) => {\n        const options = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n\n        try {\n          const res = await fetch(baseUrl + url, options);\n\n          if (res.ok) {\n            const data = res.json();\n            console.log(data);\n            resolve(data);\n          } else {\n            reject(resolve.statusText);\n          }\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n  }\n\n}\n\nexport default new apiService();","map":{"version":3,"sources":["F:/LearnWork/frontendhotel/services/apiServices.js"],"names":["baseUrl","fetch","apiService","url","Promise","resolve","reject","options","headers","res","ok","data","json","console","log","statusText","error"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAIA,MAAMC,UAAN,CAAiB;AAAA;AAAA,oCAEJ,gBAAgBC,GAAhB,EAAqB;AAC1B,aAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,cAAMC,OAAO,GAAG;AACZC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB;AADG,SAAhB;;AAGA,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMR,KAAK,CAACD,OAAO,GAAGG,GAAX,EAAgBI,OAAhB,CAAvB;;AACA,cAAIE,GAAG,CAACC,EAAR,EAAY;AACR,kBAAMC,IAAI,GAAGF,GAAG,CAACG,IAAJ,EAAb;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAN,YAAAA,OAAO,CAACM,IAAD,CAAP;AACH,WAJD,MAKK;AACDL,YAAAA,MAAM,CAACD,OAAO,CAACU,UAAT,CAAN;AACH;AACJ,SAVD,CAUE,OAAOC,KAAP,EAAc;AACZV,UAAAA,MAAM,CAACU,KAAD,CAAN;AACH;AACJ,OAjBM,CAAP;AAkBH,KArBY;AAAA;;AAAA;;AAwBjB,eAAe,IAAId,UAAJ,EAAf","sourcesContent":["import { baseUrl } from '../common/baseUrl'\r\nimport fetch from 'node-fetch'\r\n\r\n\r\n\r\nclass apiService {\r\n\r\n    getAll = async function (url) {\r\n        return new Promise(async (resolve, reject) => {\r\n            const options = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            try {\r\n                const res = await fetch(baseUrl + url, options);\r\n                if (res.ok) {\r\n                    const data = res.json();\r\n                    console.log(data);\r\n                    resolve(data);\r\n                }\r\n                else {\r\n                    reject(resolve.statusText);\r\n                }\r\n            } catch (error) {\r\n                reject(error);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default new apiService();"]},"metadata":{},"sourceType":"module"}